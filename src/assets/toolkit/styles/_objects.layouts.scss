/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/

// Predefine the variables below in order to alter and enable specific features.
$layout-gutter:            $base-spacing-unit--small !default;
$layout-columns-number:    12 !default;

$layout-flex-grid-enable:  true !default;
$layout-fixed-grid-enable: false !default;
$layout-enable-order:      false !default;
$layout-enable-reverse:    false !default;
$layout-enable-offset:     false !default;
$layout-enable-thumbnails: true  !default;





/**
 * Layout
 *
 * 1. Defines the default behaviour for how flex items are laid out along the
 *    cross axis on the current line. Item are aligned at the top. Items are
 *    aligned to the top.
 * 2. Defines the alignment along the main axis. Items are aligne on the left.
 */
.layout {
  display:flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start; /* [1] */
  justify-content: flex-start; /* [2] */
  margin-right: -$layout-gutter;
  margin-left: -$layout-gutter;
}





/**
 * Flex item
 */
.layout__item {
  padding-right: $layout-gutter;
  padding-left: $layout-gutter;
}





//------------------------------------
// Flexible grid system
//------------------------------------

@if $layout-flex-grid-enable == true {

  /**
   * Grid with flexible columns widths
   */
  $i: 1;
  @while $i <= $layout-columns-number {
    /**
     * Flexible item with a size of #{$i}
     */
    .layout--flex .layout__item--#{$i} {
      flex: $i;
    }
    $i: $i + 1;
  }

  /**
   * Flexible item with a size of 100% (full width)
   */
  .layout--flex .layout__item--full {
    flex: 1 1 100%;
  }

  // check if inuit-responsive-settings is include
  @if $responsive-settings == true {
    // responsive classes
    // based on inuit-responsive-settings breakpoints
    @include generate-responsive-item() {
      $i: 1;
      @while $i <= $layout-columns-number {
        /**
         * Flexible item with a size of #{$i} for #{$generate-responsive-item-alias} viewport
         */
        .layout--flex .layout__item--#{$generate-responsive-item-alias}--#{$i} {
          flex: $i;
        }
        $i: $i + 1;
      }

      /**
       * Flexible item with a size of 100% (full width) for #{$generate-responsive-item-alias} viewport
       */
      .layout--flex .layout__item--#{$generate-responsive-item-alias}--full {
        flex: 1 1 100%;
      }
    }
  } @else {
    @warn "There is no breakpoints define. Include inuit-responsive-settings.";
  }

}





//------------------------------------
// Fixed grid system
//------------------------------------

@if $layout-fixed-grid-enable == true {

  /**
   * #{$layout-columns-number} columns grid
   *
   * Items can be from 1 to #{$layout-columns-number} columns width
   */
  $i: 1;
  @while $i <= $layout-columns-number {
    /**
     * Flexible item with a size of #{$i}
     */
    .layout--fixed .layout__item--#{$i} {
      $flex-basis: 100/$layout-columns-number*$i*1%;
      flex: 0 1 $flex-basis;
    }
    $i: $i + 1;
  }

  /**
   * Flexible item with a size of 100% (full width)
   */
  .layout--fixed .layout__item--full {
    flex: 1 1 100%;
  }

  // check if inuit-responsive-settings is include
  @if $responsive-settings == true {
    // reponsive classes
    // based on inuit-responsive-settings breakpoints
    @include generate-responsive-item() {
      $i: 1;
      @while $i <= $layout-columns-number {
        /**
         * Fixed item with a size of #{$i} for #{$generate-responsive-item-alias} viewport
         */
        .layout--fixed .layout__item--#{$generate-responsive-item-alias}--#{$i} {
          $flex-basis: 100/$layout-columns-number*$i*1%;
          flex: 0 1 $flex-basis;
        }
        $i: $i + 1;
      }

      /**
       * Flexible item with a size of 100% (full width) for #{$generate-responsive-item-alias} viewport
       */
      .layout--fixed .layout__item--#{$generate-responsive-item-alias}--full {
        flex: 0 1 100%;
      }
    }
  } @else {
    @warn "There is no breakpoints define. Include inuit-responsive-settings.";
  }

}





//------------------------------------
// Order
//------------------------------------

@if $layout-enable-order == true {
  $i: 1;
  @while $i <= $layout-columns-number {
    /**
     * Make the item appear in #{$i} position
     */
    .layout__item--order-#{$i} {
      order: $i;
    }
    $i: $i + 1;
  }

  // check if inuit-responsive-settings is include
  @if $responsive-settings == true {
    @include generate-responsive-item() {
      $i: 1;
      @while $i <= $layout-columns-number {
        /**
         * Make the item appear in #{$i} position for #{$generate-responsive-item-alias} viewport
         */
        .layout__item--#{$generate-responsive-item-alias}--order-#{$i} {
          order: $i;
        }
        $i: $i + 1;
      }
    }
  }

}





//------------------------------------
// Reverse
//------------------------------------

@if $layout-enable-order == true {
  /**
   * Reverse item direction
   */
  .layout--reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }
}





//------------------------------------
// Offset
//------------------------------------

// offsets are only available for fixed grid layout
@if $layout-enable-offset == true and $layout-fixed-grid-enable == true {
  /**
   * Offset
   */
  $i: 1;
  @while $i <= $layout-columns-number {
   /**
    * Offset of #{$i} column(s) width
    */
    .layout__item--offset-#{$i} {
      margin-left: 100/$layout-columns-number*$i*1%;
    }
    $i: $i + 1;
  }

  // responsive offsets
  // check if inuit-responsive-settings is include
  @if $responsive-settings == true {
    @include generate-responsive-item() {
      $i: 1;
      @while $i <= $layout-columns-number {
        /**
        * Offset of #{$i} columns for #{$generate-responsive-item-alias} viewport
        */
        .layout__item--#{$generate-responsive-item-alias}--offset-#{$i} {
          margin-left: 100/$layout-columns-number*$i*1%;
        }
        $i: $i + 1;
      }
    }
  }

}
