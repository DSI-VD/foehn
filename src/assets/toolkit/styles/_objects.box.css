/*------------------------------------*\
    #BOX
\*------------------------------------*/

/**
 * The box object simply boxes off content.
 */

// Predefine the variables below in order to alter and enable specific features.
$box-padding:         $base-spacing-unit !default;
$box-padding--tiny:     quarter($box-padding) !default;
$box-padding--small:      halve($box-padding) !default;
$box-padding--large:     double($box-padding) !default;
$box-padding--huge:   quadruple($box-padding) !default;

$enable-box--flush:   false !default;
$enable-box--tiny:    false !default;
$enable-box--small:   false !default;
$enable-box--large:   false !default;
$enable-box--huge:    false !default;





/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box,
%box {
    @extend %clearfix;
    display: block; /* [1] */
    padding: $box-padding;

    > :last-child {
        margin-bottom: 0;
    }

}





@if ($enable-box--flush == true) {

    /**
     * Flush (i.e. no padding) box.
     */

    .box--flush,
    %box--flush {
        padding: 0;
    }

}

@if ($enable-box--tiny == true) {

    /**
     * Tiny box.
     */

    .box--tiny,
    %box--tiny {
        padding: $box-padding--tiny;
    }

}

@if ($enable-box--small == true) {

    /**
     * Small box.
     */

    .box--small,
    %box--small {
        padding: $box-padding--small;
    }

}

@if ($enable-box--large == true) {

    /**
     * Large box.
     */

    .box--large,
    %box--large {
        padding: $box-padding--large;
    }

}

@if ($enable-box--huge == true) {

    /**
     * Huge box.
     */

    .box--huge,
    %box--huge {
        padding: $box-padding--huge;
    }

}
