/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/

:root {
    --expo-gutter: var(--base-spacing-unit--small);
}





/**
 * Expo
 *
 * 1. Defines the default behaviour for how flex items are laid out along the
 *    cross axis on the current line. Item are aligned at the top. Items are
 *    aligned to the top.
 * 2. Defines the alignment along the main axis. Items are aligne on the left.
 */
.expo {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start; /* [1] */
  justify-content: flex-start; /* [2] */
  margin-right: -var(--expo-gutter);
  margin-left: -var(--expo-gutter);
}





    /**
     * Expo item
     *
     * 1. The items doesn't grow. His size is the value of `flex-basis`.
     */
    .expo__item {
      padding-right: var(--expo-gutter);
      padding-left: var(--expo-gutter);
      flex-grow: 0; /* [1] */
      flex-shrink: 1;
    }

    .expo--1 .expo__item { flex-basis: calc( 100% / 1); }
    .expo--2 .expo__item { flex-basis: calc( 100% / 2); }
    .expo--3 .expo__item { flex-basis: calc( 100% / 3); }
    .expo--4 .expo__item { flex-basis: calc( 100% / 4); }
    .expo--5 .expo__item { flex-basis: calc( 100% / 5); }
    .expo--6 .expo__item { flex-basis: calc( 100% / 6); }

    @media (--palm) {
        .expo--palm--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--palm--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--palm--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--palm--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--palm--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--palm--6 .expo__item { flex-basis: calc( 100% / 6); }
    }

    @media (--lap) {
        .expo--lap--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--lap--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--lap--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--lap--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--lap--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--lap--6 .expo__item { flex-basis: calc( 100% / 6); }
    }

    @media (--lap-and-up) {
        .expo--lap-and-up--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--lap-and-up--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--lap-and-up--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--lap-and-up--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--lap-and-up--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--lap-and-up--6 .expo__item { flex-basis: calc( 100% / 6); }
    }

    @media (--portable) {
        .expo--portable--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--portable--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--portable--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--portable--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--portable--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--portable--6 .expo__item { flex-basis: calc( 100% / 6); }
    }

    @media (--desk) {
        .expo--desk--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--desk--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--desk--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--desk--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--desk--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--desk--6 .expo__item { flex-basis: calc( 100% / 6); }
    }

    @media (--retina) {
        .expo--retina--1 .expo__item { flex-basis: calc( 100% / 1); }
        .expo--retina--2 .expo__item { flex-basis: calc( 100% / 2); }
        .expo--retina--3 .expo__item { flex-basis: calc( 100% / 3); }
        .expo--retina--4 .expo__item { flex-basis: calc( 100% / 4); }
        .expo--retina--5 .expo__item { flex-basis: calc( 100% / 5); }
        .expo--retina--6 .expo__item { flex-basis: calc( 100% / 6); }
    }
